plugins {
    id 'java'
}

group = 'global.unet'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    // JUnit 5 для тестирования
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.2'
    
    // Mockito для создания моков
    testImplementation 'org.mockito:mockito-core:5.1.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.1.1'
    
    // SLF4J для логирования
    implementation 'org.slf4j:slf4j-api:2.0.6'
    testImplementation 'ch.qos.logback:logback-classic:1.4.5'
}

test {
    useJUnitPlatform()
    
    // Настройки для тестов
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
        showStandardStreams = false
    }
    
    // Настройки JVM для тестов
    jvmArgs '-Xmx1g'
}

// Настройки для отчетов о покрытии кода
apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.8.8"
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }
}

test {
    finalizedBy jacocoTestReport
}

// Настройки компиляции
java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

compileJava {
    options.encoding = 'UTF-8'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

// Задача для запуска всех тестов с подробным выводом
task testVerbose(type: Test) {
    useJUnitPlatform()
    testLogging {
        events "started", "passed", "skipped", "failed", "standardOut", "standardError"
        exceptionFormat "full"
        showStandardStreams = true
    }
}

// Задача для проверки качества кода
task checkQuality {
    dependsOn test, jacocoTestReport
    description = 'Runs tests and generates coverage report'
}

