package global.unet.monitoring.server;

import java.util.*;

/**
 * Упрощенная версия трекера топологии сети
 */
public class NetworkTopologyTracker {
    private final Map<String, NodeInfo> nodes = new HashMap<>();
    
    public NetworkTopologyTracker() {
        System.out.println("Network topology tracker initialized");
    }
    
    public void addNode(String nodeId, String address, int port) {
        nodes.put(nodeId, new NodeInfo(nodeId, address, port));
        System.out.println("Added node to topology: " + nodeId);
    }
    
    public void removeNode(String nodeId) {
        nodes.remove(nodeId);
        System.out.println("Removed node from topology: " + nodeId);
    }
    
    public Map<String, NodeInfo> getAllNodes() {
        return new HashMap<>(nodes);
    }
    
    public int getNodeCount() {
        return nodes.size();
    }
    
    public String getTopologyJson() {
        StringBuilder json = new StringBuilder("{\"nodes\":[");
        boolean first = true;
        
        for (NodeInfo node : nodes.values()) {
            if (!first) json.append(",");
            json.append("{\"id\":\"").append(node.nodeId).append("\",")
                .append("\"address\":\"").append(node.address).append("\",")
                .append("\"port\":").append(node.port).append("}");
            first = false;
        }
        
        json.append("]}");
        return json.toString();
    }
    
    public void updateNode(String nodeId, long timestamp) {
        // Обновляем информацию об узле
        if (nodes.containsKey(nodeId)) {
            System.out.println("Updated node: " + nodeId + " at " + timestamp);
        }
    }
    
    public Map<String, Object> getNetworkTopology() {
        Map<String, Object> topology = new HashMap<>();
        topology.put("nodes", getAllNodes());
        topology.put("node_count", getNodeCount());
        return topology;
    }
    
    public int getActiveNodesCount() {
        return getNodeCount();
    }
    
    private static class NodeInfo {
        final String nodeId;
        final String address;
        final int port;
        
        NodeInfo(String nodeId, String address, int port) {
            this.nodeId = nodeId;
            this.address = address;
            this.port = port;
        }
    }
}

