package global.unet.monitoring.metrics;

import java.util.*;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.atomic.AtomicLong;

/**
 * Гистограмма - метрика для сбора статистики распределения значений
 */
public class Histogram implements Metric {
    private final String name;
    private final String description;
    private final String[] labelNames;
    private final double[] buckets;
    private final Map<String, HistogramData> data;
    
    /**
     * Стандартные границы для гистограммы времени отклика (в миллисекундах)
     */
    private static final double[] DEFAULT_BUCKETS = {
        0.5, 1, 2.5, 5, 10, 25, 50, 100, 250, 500, 1000, 2500, 5000, 10000, Double.POSITIVE_INFINITY
    };
    
    /**
     * Конструктор гистограммы с стандартными границами
     */
    public Histogram(String name, String description, String... labelNames) {
        this(name, description, DEFAULT_BUCKETS, labelNames);
    }
    
    /**
     * Конструктор гистограммы с пользовательскими границами
     */
    public Histogram(String name, String description, double[] buckets, String... labelNames) {
        this.name = name;
        this.description = description;
        this.labelNames = labelNames.clone();
        this.buckets = buckets.clone();
        this.data = new ConcurrentHashMap<>();
        
        // Проверка, что границы отсортированы
        for (int i = 1; i < buckets.length; i++) {
            if (buckets[i] <= buckets[i - 1]) {
                throw new IllegalArgumentException("Bucket boundaries must be sorted in increasing order");
            }
        }
    }
    
    @Override
    public String getName() {
        return name;
    }
    
    @Override
    public String getDescription() {
        return description;
    }
    
    @Override
    public String[] getLabelNames() {
        return labelNames.clone();
    }
    
    /**
     * Наблюдать значение
     */
    public void observe(double value, String... labelValues) {
        String key = createLabelKey(labelValues);
        data.computeIfAbsent(key, k -> new HistogramData())
            .observe(value);
    }
    
    /**
     * Получить количество наблюдений
     */
    public long getCount(String... labelValues) {
        String key = createLabelKey(labelValues);
        HistogramData histData = data.get(key);
        return histData != null ? histData.count.get() : 0;
    }
    
    /**
     * Получить сумму всех наблюдений
     */
    public double getSum(String... labelValues) {
        String key = createLabelKey(labelValues);
        HistogramData histData = data.get(key);
        return histData != null ? histData.sum : 0.0;
    }
    
    /**
     * Получить среднее значение
     */
    public double getMean(String... labelValues) {
        String key = createLabelKey(labelValues);
        HistogramData histData = data.get(key);
        if (histData == null || histData.count.get() == 0) {
            return 0.0;
        }
        return histData.sum / histData.count.get();
    }
    
    /**
     * Получить количество наблюдений в корзине
     */
    public long getBucketCount(double bucket, String... labelValues) {
        String key = createLabelKey(labelValues);
        HistogramData histData = data.get(key);
        if (histData == null) {
            return 0;
        }
        
        for (int i = 0; i < buckets.length; i++) {
            if (buckets[i] >= bucket) {
                return histData.bucketCounts[i].get();
            }
        }
        
        return histData.bucketCounts[buckets.length - 1].get();
    }
    
    @Override
    public List<MetricSample> getSamples() {
        List<MetricSample> samples = new ArrayList<>();
        
        for (Map.Entry<String, HistogramData> entry : data.entrySet()) {
            Map<String, String> labels = parseLabelKey(entry.getKey());
            HistogramData histData = entry.getValue();
            
            // Добавляем образцы для корзин
            for (int i = 0; i < buckets.length; i++) {
                Map<String, String> bucketLabels = new HashMap<>(labels);
                bucketLabels.put("le", buckets[i] == Double.POSITIVE_INFINITY ? "+Inf" : String.valueOf(buckets[i]));
                samples.add(new MetricSample(name + "_bucket", bucketLabels, histData.bucketCounts[i].get()));
            }
            
            // Добавляем образец для общего количества
            samples.add(new MetricSample(name + "_count", labels, histData.count.get()));
            
            // Добавляем образец для суммы
            samples.add(new MetricSample(name + "_sum", labels, histData.sum));
        }
        
        return samples;
    }
    
    @Override
    public void reset() {
        data.clear();
    }
    
    /**
     * Данные гистограммы для одного набора меток
     */
    private class HistogramData {
        private final AtomicLong count = new AtomicLong(0);
        private volatile double sum = 0.0;
        private final AtomicLong[] bucketCounts;
        private final Object sumLock = new Object();
        
        public HistogramData() {
            this.bucketCounts = new AtomicLong[buckets.length];
            for (int i = 0; i < buckets.length; i++) {
                this.bucketCounts[i] = new AtomicLong(0);
            }
        }
        
        public void observe(double value) {
            count.incrementAndGet();
            
            synchronized (sumLock) {
                sum += value;
            }
            
            // Увеличиваем счетчики корзин
            for (int i = 0; i < buckets.length; i++) {
                if (value <= buckets[i]) {
                    bucketCounts[i].incrementAndGet();
                }
            }
        }
    }
    
    /**
     * Создать ключ из значений меток
     */
    private String createLabelKey(String... labelValues) {
        if (labelValues.length != labelNames.length) {
            throw new IllegalArgumentException(
                String.format("Expected %d label values, got %d", labelNames.length, labelValues.length)
            );
        }
        
        if (labelNames.length == 0) {
            return "";
        }
        
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < labelNames.length; i++) {
            if (i > 0) {
                sb.append(",");
            }
            sb.append(labelNames[i]).append("=").append(labelValues[i]);
        }
        
        return sb.toString();
    }
    
    /**
     * Разобрать ключ меток в карту
     */
    private Map<String, String> parseLabelKey(String key) {
        Map<String, String> labels = new HashMap<>();
        
        if (key.isEmpty()) {
            return labels;
        }
        
        String[] pairs = key.split(",");
        for (String pair : pairs) {
            String[] parts = pair.split("=", 2);
            if (parts.length == 2) {
                labels.put(parts[0], parts[1]);
            }
        }
        
        return labels;
    }
    
    @Override
    public String toString() {
        return String.format("Histogram{name='%s', description='%s', buckets=%d, samples=%d}",
            name, description, buckets.length, data.size());
    }
}

